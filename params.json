{
  "name": "Ignore-file",
  "tagline": "Parse and test an ignore file, such as .gitignore",
  "body": "# ignore-file\r\n\r\nParse and test an ignore file, such as `.gitignore`\r\n\r\n# Install\r\n\r\nPick an msi package [here](https://github.com/mh-cbon/ignore-file/releases)!\r\n\r\n__chocolatey__\r\n\r\n```sh\r\nchoco install ignore-file\r\n```\r\n\r\n__deb/rpm repositories__\r\n\r\n```sh\r\nwget -O - https://raw.githubusercontent.com/mh-cbon/latest/master/source.sh \\\r\n| GH=mh-cbon/ignore-file sh -xe\r\n# or\r\ncurl -L https://raw.githubusercontent.com/mh-cbon/latest/master/source.sh \\\r\n| GH=mh-cbon/ignore-file sh -xe\r\n```\r\n\r\n__deb/rpm packages__\r\n\r\n```sh\r\ncurl -L https://raw.githubusercontent.com/mh-cbon/latest/master/install.sh \\\r\n| GH=mh-cbon/ignore-file sh -xe\r\n# or\r\nwget -q -O - --no-check-certificate \\\r\nhttps://raw.githubusercontent.com/mh-cbon/latest/master/install.sh \\\r\n| GH=mh-cbon/ignore-file sh -xe\r\n```\r\n\r\n__go__\r\n\r\n```sh\r\nmkdir -p $GOPATH/src/github.com/mh-cbon\r\ncd $GOPATH/src/github.com/mh-cbon\r\ngit clone https://github.com/mh-cbon/ignore-file.git\r\ncd ignore-file\r\nglide install\r\ngo install\r\n```\r\n\r\n\r\n# Usage as a lib\r\n\r\n```go\r\npackage main\r\n\r\nimport (\r\n\t\"fmt\"\r\n\t\"github.com/mh-cbon/ignore-file/ignored\"\r\n)\r\n\r\n\r\nfunc main() {\r\n\r\n  ignore := ignored.Ignored{}\r\n  if err := ignore.Load(\".gitignore\"); err != nil {\r\n    fmt.Println(err)\r\n    return nil\r\n  }\r\n\r\n  if err := ignore.Append(\".git\"); err != nil {\r\n    fmt.Println(err)\r\n    return nil\r\n  }\r\n\r\n  computed := ignore.ComputeDirectory(\".\")\r\n  for _, l := range computed {\r\n    fmt.Println(l)\r\n  }\r\n}\r\n```\r\n\r\n# Usage as a binary\r\n\r\n```sh\r\nNAME:\r\n   ignore-file - Test a ignore file\r\n\r\nUSAGE:\r\n   ignore-file <ignore file path> <options>\r\n\r\nVERSION:\r\n   0.0.0\r\n\r\nCOMMANDS:\r\n     help, h  Shows a list of commands or help for one command\r\n\r\nGLOBAL OPTIONS:\r\n   --json, -j              return json response\r\n   --also value, -a value  Add new rule\r\n   --help, -h              show help\r\n   --version, -v           print the version\r\n\r\nEXAMPLE:\r\n  ignore-file .gitignore\r\n  ignore-file -a .git .gitignore\r\n  ignore-file -a .git -a someother .gitignore\r\n```\r\n\r\nIn other words,\r\n\r\n```sh\r\n$ ignore-file -a .git .gitignore\r\n/.gitignore\r\n/README.md\r\n/fixtures/dira/fileb\r\n/fixtures/dira/other\r\n/fixtures/dira/some\r\n/fixtures/dira/someother\r\n/fixtures/dirb/fileb\r\n/fixtures/dirb/other/fileb\r\n/fixtures/dirb/other/some\r\n/fixtures/filea\r\n/fixtures/other\r\n/fixtures/othera\r\n/fixtures/otherfile\r\n/fixtures/some\r\n/fixtures/someother\r\n/glide.lock\r\n/glide.yaml\r\n/ignored/index.go\r\n/ignored/index_test.go\r\n/main.go\r\n```\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}